<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kvm on 没有理想的人不伤心</title>
    <link>https://typesafe.cn/tags/kvm/</link>
    <description>Recent content in kvm on 没有理想的人不伤心</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 31 May 2021 19:20:00 +0800</lastBuildDate><atom:link href="https://typesafe.cn/tags/kvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KVM 虚拟机磁盘扩容</title>
      <link>https://typesafe.cn/posts/kvm-disk-resize/</link>
      <pubDate>Mon, 31 May 2021 19:20:00 +0800</pubDate>
      
      <guid>https://typesafe.cn/posts/kvm-disk-resize/</guid>
      <description>一、镜像扩容    注意：需要先关闭虚拟机才能操作，+号前面有空格，后面没有空格。
qemu-img resize test.qcow2 +80G 原镜像磁盘大小20GB，扩容完成后可使用以下命令查看
qemu-img info test.qcow2 输出
image: test.qcow2 file format: qcow2 virtual size: 100G (107374182400 bytes) disk size: 885M cluster_size: 65536 Format specific information: compat: 1.1 lazy refcounts: false refcount bits: 16 corrupt: false 二、Windows磁盘扩容    Windows磁盘扩容比较方便，进入 计算机管理&amp;gt;磁盘管理 找到新增的分区把它添加到需要的分区即可。
三、Linux磁盘扩容    启动虚拟机后，进入虚拟机控制台，使用fdisk -l命令查看磁盘信息。
Disk /dev/vda: 100 GiB, 107374182400 bytes, 209715200 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0xe11f7f01 Device Boot Start End Sectors Size Id Type /dev/vda1 * 2048 2099199 2097152 1G 83 Linux /dev/vda2 2099200 41943039 39843840 19G 8e Linux LVM Disk /dev/mapper/cl-root: 17 GiB, 18249416704 bytes, 35643392 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk /dev/mapper/cl-swap: 2 GiB, 2147483648 bytes, 4194304 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes 可以看到这台虚拟机的磁盘大小已经有100GB了，但分区大小还是没有变化，只有初始大小20GB。</description>
    </item>
    
    <item>
      <title>Linux虚拟化技术KVM</title>
      <link>https://typesafe.cn/posts/linux-kvm/</link>
      <pubDate>Sat, 29 May 2021 17:07:00 +0800</pubDate>
      
      <guid>https://typesafe.cn/posts/linux-kvm/</guid>
      <description>在Windows平台上我们习惯于使用VmWare或者virtual box来实现虚拟化，虽然它们拥有Linux版本，但大多数企业都选择了使用KVM来做Linux平台的虚拟化，因此学习掌握KVM是一项必不可少的技能。
安装KVM    以centos为例，下面是安装KVM虚拟化的命令。
yum install -y qemu-kvm libvirt virt-install bridge-utils 这么多软件都是什么作用？
   软件 作用     qemu-kvm 整合了QEMU 和 KVM 的一个软件。   libvirt 封装了QEMU的接口，可以更加方便的操作虚拟机，并且提供了很多种编程语言的SDK。   virt-install 用来创建虚拟机的命令行工具。   bridge-utils Linux网桥，用来配置虚拟机的桥接网络。    kvm、qemu、qemu-kvm和libvirt到底有什么关系？
KVM（Kernel Virtual Machine）是Linux的一个内核驱动模块，它需要CPU的支持，采用硬件辅助虚拟化技术Intel-VT、AMD-V；内存相关如Intel的EPT和AMD的RVI技术，使得它能够让Linux主机成为一个Hypervisor（虚拟机监控器）。
QEMU是一个纯软件实现的虚拟机，它可以模拟CPU、内存、磁盘等其他硬件，让虚拟机认为自己底层就是硬件，其实这些都是QEMU模拟的，虚拟机的所有操作都要经过QEMU转译一层，也就导致了QEMU本身的性能较差。
qemu-kvm是QEMU整合了KVM，把CPU虚拟化和内存虚拟化交给了KVM来做，自己来模拟IO设备，例如网卡和磁盘。这一套组合拳打下来，性能损失大大降低，相较于直接使用硬件，带来的损耗大概在1%-2%之间。
libvirt是目前使用最为广泛的对KVM虚拟机进行管理的工具和API。Libvirtd是一个daemon进程，可以被本地的virsh调用，也可以被远程的virsh调用，Libvirtd调用qemu-kvm操作虚拟机。
启动libvirt
systemctl start libvirtd systemctl enable libvirtd 如果你不想使用命令行工具来管理虚拟机，可以安装 virt-manager 。
yum install -y virt-manager 在支持x11转发的ssh客户端（例如：MobaXterm）上可以直接输入 virt-manager 来启动。
虚拟网络类型    和vmware类型，kvm也支持多种类型的网络，主要分为三种。</description>
    </item>
    
  </channel>
</rss>
