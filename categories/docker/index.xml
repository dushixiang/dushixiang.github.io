<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>docker on 没有理想的人不伤心</title>
    <link>https://typesafe.cn/categories/docker/</link>
    <description>Recent content in docker on 没有理想的人不伤心</description>
    <image>
      <url>https://typesafe.cn/papermod-cover.png</url>
      <link>https://typesafe.cn/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 23 May 2021 13:37:00 +0800</lastBuildDate><atom:link href="https://typesafe.cn/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>容器网络——如何为docker添加网卡？</title>
      <link>https://typesafe.cn/posts/how-to-add-port-for-docker/</link>
      <pubDate>Sun, 23 May 2021 13:37:00 +0800</pubDate>
      
      <guid>https://typesafe.cn/posts/how-to-add-port-for-docker/</guid>
      <description>之前我们介绍Network Namespace（以下简称netns）和veth pair时说过docker是使用这些技术来实现的网络隔离，今天我们就来一探究竟，看下docker到底是如何做到的。
启动一个无网络的容器 首先我们使用 --net=none 参数启动一个无网络的容器，为了方便调试，这里我们使用了centos镜像。
docker run -itd --name centos-test --net=none centos 启动成功之后我们进入容器内部确认一下是否无网卡。
[root@localhost ~]# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 28dc2e8853df centos &amp;#34;/bin/bash&amp;#34; 24 seconds ago Up 23 seconds centos-test [root@localhost ~]# docker exec -it 28dc2e8853df bash [root@28dc2e8853df /]# ip a 1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 可以看到确实只有一个本地环回网卡。</description>
    </item>
    
  </channel>
</rss>
